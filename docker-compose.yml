version: '3.8'

services:
  web:
    build: .
    expose:
      - "5000"
    volumes:
      - /volume1/docker/watermark-remover/app:/app
      - /volume1/docker/watermark-remover/data/uploads:/app/uploads
      - /volume1/docker/watermark-remover/data/processed:/app/processed
      - /volume1/docker/watermark-remover/data/downloads:/app/downloads
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=production
      - REDIS_URL=redis://redis:6379/0
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_KEY=${SUPABASE_KEY}
    depends_on:
      - redis
      - celery
    networks:
      - app-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M

  redis:
    image: redis:alpine
    volumes:
      - /volume1/docker/watermark-remover/data/redis:/data
    networks:
      - app-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M

  celery:
    build: .
    command: celery -A app.celery worker --loglevel=info --concurrency=2
    volumes:
      - /volume1/docker/watermark-remover/app:/app
      - /volume1/docker/watermark-remover/data/uploads:/app/uploads
      - /volume1/docker/watermark-remover/data/processed:/app/processed
      - /volume1/docker/watermark-remover/data/downloads:/app/downloads
    environment:
      - REDIS_URL=redis://redis:6379/0
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_KEY=${SUPABASE_KEY}
    depends_on:
      - redis
    networks:
      - app-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M

  celery-beat:
    build: .
    command: celery -A app.celery beat --loglevel=info
    volumes:
      - /volume1/docker/watermark-remover/app:/app
    environment:
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - redis
      - celery
    networks:
      - app-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 128M

  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - /volume1/docker/watermark-remover/nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - /volume1/docker/watermark-remover/data/uploads:/app/uploads
      - /volume1/docker/watermark-remover/data/processed:/app/processed
      - /volume1/docker/watermark-remover/data/downloads:/app/downloads
    depends_on:
      - web
    networks:
      - app-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 128M

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - portainer_data:/data
    ports:
      - "9443:9443"  # HTTPS port
      - "9000:9000"  # HTTP port (optional, can be removed for production)
    networks:
      - app-network

volumes:
  uploads:
  processed:
  downloads:
  redis-data:
  portainer_data:  # Add volume for Portainer data
  certbot-conf:
  certbot-www:

networks:
  app-network:
    driver: bridge 